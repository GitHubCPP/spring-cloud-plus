package ${package.Controller};


import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
@Api(tags = "$!{table.comment}API", description ="$!{table.comment}")
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    private ${table.serviceName} ${table.entityPath}Service;

    /**
    * $!{table.comment}详情
    * @param id  实体ID
    */
    @GetMapping("/get/{id}" )
    @ApiOperation(value = "$!{table.comment}详情")
    public BaseResponse<${entity}> get${entity}(@PathVariable Long id){
        return BaseResponse.ok(${table.entityPath}Service.getById(id));
    }

    /**
     * 添加$!{table.comment}
     * @param ${table.entityPath} 传递的实体
     *
     */
    @PostMapping("/add" )
    @ApiOperation(value = "添加$!{table.comment}")
    public  BaseResponse<Boolean> add${entity}(@RequestBody ${entity} ${table.entityPath}){
        return BaseResponse.ok(${table.entityPath}Service.save(${table.entityPath}));
    }

    /**
     * 修改加$!{table.comment}
     * @param ${table.entityPath} 传递的实体
     */
    @PutMapping("/update" )
    @ApiOperation(value = "修改$!{table.comment}")
    public BaseResponse<Boolean> update${entity}(@RequestBody ${entity} ${table.entityPath}){
        return BaseResponse.ok(${table.entityPath}Service.updateById(${table.entityPath}));
    }

    /**
    * 删除$!{table.comment}
    * @param id  实体ID
    */
    @DeleteMapping("/delete/{id}" )
    @ApiOperation(value = "删除$!{table.comment}")
    public  BaseResponse<Boolean> delete${entity}(@PathVariable Long id){
        return BaseResponse.ok(${table.entityPath}Service.removeById(id));
    }


    /**
    * 批量删除对象
    * @param ids 实体集合ID
    * @return  false 失败  true 成功
    */
    @DeleteMapping("/delete-batch" )
    @ApiOperation(value = "批量删除对象" )
    public BaseResponse<Boolean> deleteBatch${entity}(@RequestParam(required = true) List<Long> ids){
        return BaseResponse.ok(${table.entityPath}Service.removeByIds(ids));
    }

}

#end